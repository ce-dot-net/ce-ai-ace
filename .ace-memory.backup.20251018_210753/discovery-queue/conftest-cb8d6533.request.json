{
  "code_snippet": "\"\"\"pytest configuration and fixtures for ACE plugin tests.\"\"\"\n\nimport os\nimport json\nimport sqlite3\nimport tempfile\nfrom pathlib import Path\nimport pytest\n\n\n@pytest.fixture\ndef plugin_root():\n    \"\"\"Return the plugin root directory.\"\"\"\n    return Path(__file__).parent.parent\n\n\n@pytest.fixture\ndef project_root():\n    \"\"\"Return the project root directory.\"\"\"\n    return Path(__file__).parent.parent.parent.parent\n\n\n@pytest.fixture\ndef claude_env(plugin_root, tmp_path):\n    \"\"\"Provide Claude Code environment variables.\"\"\"\n    return {\n        'CLAUDE_PLUGIN_ROOT': str(plugin_root),\n        'CLAUDE_PROJECT_DIR': str(tmp_path),\n        'CLAUDECODE': '1',\n        'CLAUDE_CODE_ENTRYPOINT': 'cli'\n    }\n\n\n@pytest.fixture\ndef temp_project(tmp_path):\n    \"\"\"Create an isolated temporary project directory.\"\"\"\n    # Create ACE memory directory\n    ace_memory = tmp_path / '.ace-memory'\n    ace_memory.mkdir(parents=True, exist_ok=True)\n\n    # Create specs directory structure\n    specs = tmp_path / 'specs'\n    playbooks = specs / 'playbooks'\n    memory = specs / 'memory'\n    playbooks.mkdir(parents=True, exist_ok=True)\n    memory.mkdir(parents=True, exist_ok=True)\n\n    return tmp_path\n\n\n@pytest.fixture\ndef temp_db(temp_project):\n    \"\"\"Create and initialize a temporary ACE database.\"\"\"\n    db_path = temp_project / '.ace-memory' / 'patterns.db'\n\n    conn = sqlite3.connect(str(db_path))\n    cursor = conn.cursor()\n\n    # Create patterns table\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS patterns (\n            id TEXT PRIMARY KEY,\n            bullet_id TEXT UNIQUE NOT NULL,\n            name TEXT NOT NULL,\n            domain TEXT NOT NULL,\n            type TEXT NOT NULL,\n            description TEXT NOT NULL,\n            language TEXT NOT NULL,\n            observations INTEGER DEFAULT 0,\n            successes INTEGER DEFAULT 0,\n            failures INTEGER DEFAULT 0,\n            neutrals INTEGER DEFAULT 0,\n            helpful_count INTEGER DEFAULT 0,\n            harmful_count ",
  "full_code_length": 6665,
  "file_path": "plugins/ace-orchestration/tests/conftest.py",
  "language": "python",
  "training_mode": "offline",
  "request_id": "conftest-cb8d6533"
}