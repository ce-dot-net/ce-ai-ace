{
  "concrete": {
    "python-error-handling": {
      "description": "Python exception handling patterns and best practices",
      "evidence": [
        "specs/playbooks/003-avoid-bare-except/plan.md"
      ],
      "patterns": [
        "Avoid bare except"
      ],
      "confidence": 0.82
    },
    "ace-playbook-generation": {
      "description": "Auto-generated technical plan documents from ACE pattern analysis",
      "evidence": [
        "specs/playbooks/003-avoid-bare-except/plan.md"
      ],
      "patterns": [
        "Technical plan markdown structure",
        "Pattern metadata YAML frontmatter",
        "Auto-generated documentation"
      ],
      "confidence": 0.95
    },
    "markdown-frontmatter-metadata": {
      "description": "YAML frontmatter for pattern metadata in markdown files",
      "evidence": [
        "specs/playbooks/003-avoid-bare-except/plan.md"
      ],
      "patterns": [
        "pattern_id field",
        "type field",
        "updated timestamp"
      ],
      "confidence": 0.9
    }
  },
  "abstract": {
    "harmful-pattern-detection": {
      "description": "Identification and documentation of anti-patterns or harmful coding practices",
      "instances": [
        "python-error-handling"
      ],
      "confidence": 0.85
    },
    "structured-documentation": {
      "description": "Standardized documentation format with metadata, context, recommendations, and success criteria",
      "instances": [
        "ace-playbook-generation",
        "markdown-frontmatter-metadata"
      ],
      "confidence": 0.9
    },
    "confidence-based-recommendations": {
      "description": "Pattern recommendations with confidence scores and validation status",
      "instances": [
        "ace-playbook-generation",
        "python-error-handling"
      ],
      "confidence": 0.88
    }
  },
  "principles": {
    "explicit-exception-handling": {
      "description": "Catch specific exceptions rather than using bare except clauses to avoid suppressing critical errors like KeyboardInterrupt",
      "applied_in": [
        "harmful-pattern-detection",
        "python-error-handling"
      ],
      "confidence": 0.82
    },
    "auto-generated-documentation": {
      "description": "Generate machine-readable documentation with human-readable content and structured metadata",
      "applied_in": [
        "structured-documentation",
        "confidence-based-recommendations"
      ],
      "confidence": 0.95
    },
    "evidence-based-learning": {
      "description": "Track pattern confidence, test results, and real-world application to validate recommendations",
      "applied_in": [
        "confidence-based-recommendations",
        "harmful-pattern-detection"
      ],
      "confidence": 0.88
    }
  },
  "metadata": {
    "total_patterns_analyzed": 1,
    "discovery_method": "bottom-up from file paths and descriptions",
    "discovered_at": "2025-10-18T15:57:30Z"
  }
}
