{
  "code_snippet": "\"\"\"Tests for ACE scripts (ace-cycle, generate-playbook, etc.)\"\"\"\n\nimport pytest\nimport subprocess\nimport sqlite3\nfrom pathlib import Path\nfrom ace_test_helper import ACETestHelper\n\n\n@pytest.fixture\ndef ace_helper(plugin_root, temp_project, claude_env):\n    \"\"\"Create ACE test helper instance.\"\"\"\n    return ACETestHelper(plugin_root, temp_project, claude_env)\n\n\n@pytest.mark.unit\ndef test_generate_playbook_with_no_patterns(plugin_root, temp_project):\n    \"\"\"Test playbook generation with empty database.\"\"\"\n    # Initialize empty database\n    db_path = temp_project / '.ace-memory' / 'patterns.db'\n    db_path.parent.mkdir(parents=True, exist_ok=True)\n\n    # Run generate-playbook script\n    result = subprocess.run(\n        ['python3', str(plugin_root / 'scripts' / 'generate-playbook.py')],\n        capture_output=True,\n        text=True,\n        cwd=str(temp_project)\n    )\n\n    # Should succeed\n    assert result.returncode == 0\n\n    # Should create CLAUDE.md\n    claude_md = temp_project / 'CLAUDE.md'\n    assert claude_md.exists()\n\n    # Should contain instructions-only message\n    content = claude_md.read_text()\n    assert 'ACE Plugin Instructions' in content\n    assert 'No patterns learned yet' in content or 'Total patterns' in content\n\n\n@pytest.mark.unit\ndef test_generate_playbook_with_patterns(plugin_root, temp_project, temp_db):\n    \"\"\"Test playbook generation with existing patterns.\"\"\"\n    # Add test pattern to database\n    conn = sqlite3.connect(str(temp_db))\n    cursor = conn.cursor()\n\n    cursor.execute('''\n        INSERT INTO patterns (\n            id, bullet_id, name, domain, type, description, language,\n            observations, successes, failures, neutrals,\n            helpful_count, harmful_count, confidence,\n            last_seen, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    ''', (\n        'test-pattern-001',\n        '[test-00001]',\n        'Test Pattern',\n        'test-domain',\n        'helpful',\n        'A test pattern fo",
  "full_code_length": 6021,
  "file_path": "plugins/ace-orchestration/tests/test_scripts.py",
  "language": "python",
  "training_mode": "offline",
  "request_id": "test_scripts-62c85a0f"
}