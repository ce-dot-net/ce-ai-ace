{
  "code_snippet": "# ACE Constitution - Coding Principles\n\n*Auto-generated from high-confidence patterns (\u226570%)*\n*Last updated: 2025-10-16T14:52:54.472936*\n*Total principles: 2*\n\n---\n\n## Purpose\n\nThis constitution documents the coding principles learned by ACE from analyzing your codebase. These patterns have achieved \u226570% confidence through repeated observation and validation.\n\n## Core Principles\n\n### Python Error Handling\n\n#### \u274c Avoid bare except\n\n**Confidence**: 81.8% (22 observations)\n**Language**: python\n\nBare except catches all exceptions including KeyboardInterrupt\n\n**Playbook**: [`py-003`](../playbooks/003-avoid-bare-except/spec.md)\n\n---\n\n### Test\n\n#### \u2705 Temp\n\n**Confidence**: 100.0% (1 observations)\n**Language**: python\n\nTemp pattern\n\n**Playbook**: [`temp-001`](../playbooks/001-temp/spec.md)\n\n---\n\n## How to Use This Constitution\n\n1. **Review Regularly**: Check this file to understand learned principles\n2. **Apply in Code**: Use these patterns when writing new code\n3. **Challenge When Needed**: If a principle doesn't fit, ACE will learn and adapt\n4. **Share with Team**: This constitution represents your codebase's wisdom\n\n## Evolution\n\nThis constitution evolves as ACE learns. Patterns are:\n- **Added** when they reach 70% confidence\n- **Updated** as confidence changes\n- **Removed** if confidence drops below 30% (lazy pruning)\n\n---\n\n*Based on research: [Agentic Context Engineering](https://arxiv.org/abs/2510.04618)*\n*Generated by ACE's Curator component*\n",
  "full_code_length": 1467,
  "file_path": "specs/memory/constitution.md",
  "language": "markdown",
  "training_mode": "offline",
  "request_id": "constitution-75f036ab"
}