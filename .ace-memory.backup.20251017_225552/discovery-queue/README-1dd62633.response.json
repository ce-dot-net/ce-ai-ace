{
  "concrete": {
    "ace-speckit-format": {
      "description": "ACE playbook spec-kit directory structure with spec.md, plan.md, and insights.md files",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md",
        "specs/playbooks/*/spec.md",
        "specs/playbooks/*/plan.md",
        "specs/playbooks/*/insights.md",
        "specs/memory/constitution.md"
      ],
      "patterns": [
        "Directory structure: specs/playbooks/{id}-{name}/",
        "Three-file pattern: spec.md, plan.md, insights.md",
        "Constitution file for high-confidence principles",
        "YAML frontmatter in spec.md for metadata"
      ],
      "confidence": 0.95
    },
    "ace-pattern-lifecycle": {
      "description": "Multi-stage pattern evolution workflow from detection to git commit",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md",
        "scripts/serena-pattern-detector.py",
        "scripts/generate-speckit-playbook.py"
      ],
      "patterns": [
        "5-stage lifecycle: code → detect → test → reflect → curate → commit",
        "AST + regex based pattern detection",
        "Test-driven validation",
        "Reflector agent analysis",
        "Curator merging with 85% similarity threshold"
      ],
      "confidence": 0.9
    },
    "ace-confidence-tiers": {
      "description": "Three-tier confidence system for pattern quality assessment",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md"
      ],
      "patterns": [
        "High-confidence: ≥70% (constitution)",
        "Medium-confidence: 30-70% (validation)",
        "Low-confidence: <30% (pruning candidate)"
      ],
      "confidence": 0.85
    },
    "ace-cli-commands": {
      "description": "Slash commands for ACE pattern management in Claude Code CLI",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md",
        "plugins/ace-orchestration/commands/"
      ],
      "patterns": [
        "/ace-status - view statistics",
        "/ace-patterns [domain] [min-confidence] - list patterns",
        "/ace-export-speckit - export patterns",
        "/ace-force-reflect - manual reflection",
        "/ace-train-offline - offline training"
      ],
      "confidence": 0.9
    },
    "git-based-pattern-storage": {
      "description": "Version-controlled pattern storage with git integration",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md",
        "specs/playbooks/"
      ],
      "patterns": [
        "Commit playbooks to git for team sharing",
        "Track pattern evolution through git history",
        "Enable cross-machine synchronization",
        "Support rollback via git",
        "SQLite database (.ace-memory/patterns.db) is gitignored"
      ],
      "confidence": 0.95
    },
    "research-based-implementation": {
      "description": "Implementation based on Stanford/Berkeley ACE research paper",
      "evidence": [
        "plugins/ace-orchestration/specs/README.md"
      ],
      "patterns": [
        "arXiv:2510.04618 as reference",
        "Incremental delta updates (prevent context collapse)",
        "Semantic embeddings with 85% threshold",
        "Deterministic curation (no LLM variance)",
        "Multi-epoch training (+2.6% improvement)"
      ],
      "confidence": 0.9
    }
  },
  "abstract": {
    "incremental-learning-architecture": {
      "description": "Continuous learning system with feedback loops and refinement",
      "instances": [
        "ace-pattern-lifecycle",
        "ace-confidence-tiers"
      ],
      "confidence": 0.9
    },
    "deterministic-curation": {
      "description": "Use deterministic algorithms instead of LLM-based decisions for consistency",
      "instances": [
        "research-based-implementation",
        "ace-pattern-lifecycle"
      ],
      "confidence": 0.85
    },
    "multi-stage-validation": {
      "description": "Validate artifacts through multiple stages before acceptance",
      "instances": [
        "ace-pattern-lifecycle",
        "ace-confidence-tiers"
      ],
      "confidence": 0.9
    },
    "version-controlled-ai-state": {
      "description": "Store AI-generated artifacts in version control for collaboration",
      "instances": [
        "git-based-pattern-storage",
        "ace-speckit-format"
      ],
      "confidence": 0.95
    },
    "structured-knowledge-organization": {
      "description": "Organize knowledge with consistent directory structures and file formats",
      "instances": [
        "ace-speckit-format",
        "git-based-pattern-storage"
      ],
      "confidence": 0.9
    },
    "semantic-similarity-filtering": {
      "description": "Use semantic embeddings to filter duplicates and merge similar patterns",
      "instances": [
        "research-based-implementation",
        "ace-pattern-lifecycle"
      ],
      "confidence": 0.85
    },
    "command-based-interface": {
      "description": "Provide slash commands for user-initiated actions",
      "instances": [
        "ace-cli-commands"
      ],
      "confidence": 0.8
    },
    "dual-storage-strategy": {
      "description": "Use ephemeral database for processing and version control for persistence",
      "instances": [
        "git-based-pattern-storage"
      ],
      "confidence": 0.85
    }
  },
  "principles": {
    "evidence-based-learning": {
      "description": "Only learn patterns from actual code execution and test results, not speculation",
      "applied_in": [
        "incremental-learning-architecture",
        "multi-stage-validation"
      ],
      "confidence": 0.9
    },
    "human-readable-ai-outputs": {
      "description": "AI-generated artifacts should be human-readable and editable",
      "applied_in": [
        "structured-knowledge-organization",
        "version-controlled-ai-state"
      ],
      "confidence": 0.95
    },
    "determinism-over-creativity": {
      "description": "Prefer deterministic algorithms over LLM decisions for consistency",
      "applied_in": [
        "deterministic-curation"
      ],
      "confidence": 0.85
    },
    "team-collaboration-first": {
      "description": "Design for team-wide sharing and collaboration, not individual use",
      "applied_in": [
        "version-controlled-ai-state",
        "git-based-pattern-storage"
      ],
      "confidence": 0.9
    },
    "confidence-based-promotion": {
      "description": "Use confidence scores to determine which artifacts deserve promotion",
      "applied_in": [
        "incremental-learning-architecture",
        "multi-stage-validation"
      ],
      "confidence": 0.85
    },
    "separation-of-ephemeral-and-persistent": {
      "description": "Separate temporary working state from persistent shared state",
      "applied_in": [
        "dual-storage-strategy"
      ],
      "confidence": 0.8
    },
    "research-driven-implementation": {
      "description": "Base implementation on peer-reviewed research rather than ad-hoc decisions",
      "applied_in": [
        "deterministic-curation",
        "semantic-similarity-filtering"
      ],
      "confidence": 0.9
    },
    "progressive-refinement": {
      "description": "Continuously refine and improve artifacts over multiple iterations",
      "applied_in": [
        "incremental-learning-architecture",
        "multi-stage-validation"
      ],
      "confidence": 0.9
    }
  },
  "metadata": {
    "total_patterns_analyzed": 6,
    "discovery_method": "bottom-up from file paths and descriptions in README.md",
    "discovered_at": "2025-10-17T00:00:00Z",
    "source_file": "plugins/ace-orchestration/specs/README.md",
    "analysis_focus": "ACE playbook system architecture and workflow patterns"
  }
}
