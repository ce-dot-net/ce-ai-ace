{
  "concrete": {
    "python-exception-handling": {
      "description": "Python exception handling patterns including bare except clauses and specific exception types",
      "evidence": [
        "specs/playbooks/003-avoid-bare-except/plan.md"
      ],
      "patterns": [
        "Avoid bare except"
      ],
      "confidence": 0.82
    },
    "ace-playbook-system": {
      "description": "ACE (Agentic Context Engineering) playbook structure and technical plan documentation",
      "evidence": [
        "specs/playbooks/003-avoid-bare-except/plan.md"
      ],
      "patterns": [
        "Technical plan markdown structure",
        "Pattern metadata with YAML frontmatter",
        "Auto-generated ACE documentation"
      ],
      "confidence": 0.95
    }
  },
  "abstract": {
    "harmful-pattern-detection": {
      "description": "Identification and documentation of harmful coding patterns that should be avoided",
      "instances": [
        "python-exception-handling"
      ],
      "confidence": 0.85
    },
    "pattern-documentation": {
      "description": "Structured documentation of coding patterns with metadata, recommendations, and success criteria",
      "instances": [
        "ace-playbook-system"
      ],
      "confidence": 0.9
    },
    "test-driven-validation": {
      "description": "Pattern validation through test results and confidence scoring",
      "instances": [
        "ace-playbook-system"
      ],
      "confidence": 0.8
    }
  },
  "principles": {
    "defensive-exception-handling": {
      "description": "Avoid catching all exceptions indiscriminately; use specific exception types to prevent masking critical errors like KeyboardInterrupt",
      "applied_in": [
        "harmful-pattern-detection"
      ],
      "confidence": 0.85
    },
    "automated-pattern-learning": {
      "description": "Automatically detect, analyze, and document code patterns with confidence scoring and test validation",
      "applied_in": [
        "pattern-documentation",
        "test-driven-validation"
      ],
      "confidence": 0.9
    },
    "structured-knowledge-capture": {
      "description": "Use consistent metadata and documentation structure to capture technical knowledge in machine-readable format",
      "applied_in": [
        "pattern-documentation"
      ],
      "confidence": 0.88
    }
  },
  "metadata": {
    "total_patterns_analyzed": 1,
    "discovery_method": "bottom-up from file paths and descriptions",
    "discovered_at": "2025-10-17T22:19:10.162457"
  }
}
