{
  "concrete": {
    "end-to-end-ace-workflow": {
      "description": "Integration testing of full ACE workflow: Edit -> ace-cycle -> patterns -> playbooks",
      "evidence": [
        "plugins/ace-orchestration/tests/test_integration.py"
      ],
      "patterns": [
        "Multi-step workflow testing (Edit, ace-cycle, pattern storage, playbook generation)",
        "Database verification after workflow execution",
        "assert_pattern_stored helper for database validation",
        "get_db_patterns helper for pattern retrieval",
        "Sequential subprocess.run calls for multi-script workflows",
        "File existence verification (CLAUDE.md, specs/)"
      ],
      "confidence": 0.95
    },
    "pytest-integration-marker": {
      "description": "Using pytest.mark.integration to separate integration tests from unit tests",
      "evidence": [
        "plugins/ace-orchestration/tests/test_integration.py"
      ],
      "patterns": [
        "@pytest.mark.integration decorator",
        "Longer-running tests with multiple subprocess calls",
        "Testing multiple system components together"
      ],
      "confidence": 0.9
    }
  },
  "abstract": {
    "workflow-validation": {
      "description": "Testing complete user workflows from input to final output",
      "instances": ["end-to-end-ace-workflow"],
      "confidence": 0.95
    },
    "state-verification-at-checkpoints": {
      "description": "Verifying system state at each step of a multi-step workflow",
      "instances": ["end-to-end-ace-workflow"],
      "confidence": 0.9
    }
  },
  "principles": {
    "test-categorization": {
      "description": "Marking tests by type (unit, integration) for selective execution",
      "applied_in": ["workflow-validation"],
      "confidence": 0.9
    },
    "incremental-verification": {
      "description": "Verifying correctness at each step rather than only at the end",
      "applied_in": ["state-verification-at-checkpoints"],
      "confidence": 0.85
    },
    "multi-artifact-validation": {
      "description": "Validating multiple output artifacts (database, files, directories) after workflow",
      "applied_in": ["workflow-validation"],
      "confidence": 0.9
    }
  },
  "metadata": {
    "total_patterns_analyzed": 1,
    "discovery_method": "bottom-up from file paths and descriptions",
    "discovered_at": "2025-10-18T21:10:00Z"
  }
}
