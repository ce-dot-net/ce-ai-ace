{
  "concrete": {
    "hook-lifecycle-testing": {
      "description": "Testing Claude Code CLI plugin hooks (PostToolUse, AgentStart) via simulation",
      "evidence": [
        "plugins/ace-orchestration/tests/test_hooks.py"
      ],
      "patterns": [
        "simulate_edit_tool method for Edit tool simulation",
        "simulate_write_tool method for Write tool simulation",
        "mock_agent_response for avoiding real agent invocations",
        "PostToolUse hook triggering on Edit/Write tools",
        "JSON response validation from hooks"
      ],
      "confidence": 0.95
    },
    "ace-fixture-pattern": {
      "description": "Pytest fixtures for ACE test infrastructure (ace_helper, temp_db, claude_env)",
      "evidence": [
        "plugins/ace-orchestration/tests/test_hooks.py",
        "plugins/ace-orchestration/tests/conftest.py"
      ],
      "patterns": [
        "ace_helper fixture combining plugin_root, temp_project, claude_env",
        "temp_db fixture for isolated SQLite testing",
        "sample_code fixture for test data",
        "mock_agent_response fixture for mocking reflector responses"
      ],
      "confidence": 0.9
    }
  },
  "abstract": {
    "tool-event-simulation": {
      "description": "Simulating tool execution events to trigger plugin hooks in tests",
      "instances": ["hook-lifecycle-testing"],
      "confidence": 0.9
    },
    "mocking-for-isolation": {
      "description": "Mocking external dependencies (agents, APIs) to isolate unit under test",
      "instances": ["hook-lifecycle-testing", "ace-fixture-pattern"],
      "confidence": 0.85
    }
  },
  "principles": {
    "hook-transparency": {
      "description": "Hooks should return JSON responses indicating whether to continue or halt",
      "applied_in": ["tool-event-simulation"],
      "confidence": 0.8
    },
    "fixture-composition": {
      "description": "Composing complex test fixtures from simpler fixtures",
      "applied_in": ["ace-fixture-pattern"],
      "confidence": 0.85
    },
    "test-data-fixtures": {
      "description": "Using fixtures to provide consistent test data across tests",
      "applied_in": ["ace-fixture-pattern"],
      "confidence": 0.9
    }
  },
  "metadata": {
    "total_patterns_analyzed": 1,
    "discovery_method": "bottom-up from file paths and descriptions",
    "discovered_at": "2025-10-18T21:10:00Z"
  }
}
