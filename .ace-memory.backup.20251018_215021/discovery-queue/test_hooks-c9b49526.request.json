{
  "code_snippet": "\"\"\"Tests for ACE Plugin hooks (PostToolUse, AgentStart, etc.)\"\"\"\n\nimport pytest\nfrom pathlib import Path\nfrom ace_test_helper import ACETestHelper\n\n\n@pytest.fixture\ndef ace_helper(plugin_root, temp_project, claude_env):\n    \"\"\"Create ACE test helper instance.\"\"\"\n    return ACETestHelper(plugin_root, temp_project, claude_env)\n\n\n@pytest.mark.unit\ndef test_post_tool_use_hook_with_edit_tool(ace_helper, temp_db, sample_code, mock_agent_response):\n    \"\"\"Test that PostToolUse hook triggers ace-cycle.py with Edit tool.\"\"\"\n    # Create a test file\n    test_file = ace_helper.project_root / 'test.py'\n    test_file.write_text(sample_code)\n\n    # Mock agent response to avoid real agent invocation\n    ace_helper.mock_agent_response('reflector', mock_agent_response, 'test.py')\n\n    # Simulate Edit tool \u2192 PostToolUse hook\n    result = ace_helper.simulate_edit_tool(\n        file_path='test.py',\n        old_string='def foo(): pass',\n        new_string='def foo():\\n    return \"bar\"'\n    )\n\n    # Verify hook executed successfully\n    assert result.exit_code == 0, f\"Hook failed with stderr: {result.stderr}\"\n\n    # Verify ACE cycle started (check stderr for log messages)\n    assert \"ACE: Starting reflection cycle\" in result.stderr or result.exit_code == 0\n\n    # Verify JSON response (if hook returns one)\n    if result.json_response:\n        assert result.json_response.get('continue') is True\n\n\n@pytest.mark.unit\ndef test_post_tool_use_hook_with_write_tool(ace_helper, temp_db, sample_code, mock_agent_response):\n    \"\"\"Test that PostToolUse hook triggers ace-cycle.py with Write tool.\"\"\"\n    # Mock agent response\n    ace_helper.mock_agent_response('reflector', mock_agent_response, 'app.py')\n\n    # Simulate Write tool \u2192 PostToolUse hook\n    result = ace_helper.simulate_write_tool(\n        file_path='app.py',\n        content=sample_code\n    )\n\n    # Verify hook executed successfully\n    assert result.exit_code == 0, f\"Hook failed with stderr: {result.stderr}\"\n\n    # Verify file was created\n  ",
  "full_code_length": 4271,
  "file_path": "plugins/ace-orchestration/tests/test_hooks.py",
  "language": "python",
  "training_mode": "offline",
  "request_id": "test_hooks-c9b49526"
}