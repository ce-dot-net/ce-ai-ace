{
  "concrete": {
    "ace-playbook-specs": {
      "description": "ACE (Agentic Context Engineering) playbook specification files for documenting coding patterns",
      "evidence": ["specs/playbooks/003-avoid-bare-except/plan.md"],
      "patterns": ["Avoid bare except"],
      "confidence": 0.75
    },
    "python-exception-handling": {
      "description": "Python exception handling patterns and anti-patterns",
      "evidence": ["specs/playbooks/003-avoid-bare-except/plan.md"],
      "patterns": ["Avoid bare except"],
      "confidence": 0.85
    }
  },
  "abstract": {
    "harmful-pattern-documentation": {
      "description": "Documentation of harmful coding patterns to avoid",
      "instances": ["python-exception-handling"],
      "confidence": 0.8
    },
    "technical-planning": {
      "description": "Structured technical plans with summary, context, approach, and success criteria",
      "instances": ["ace-playbook-specs"],
      "confidence": 0.7
    }
  },
  "principles": {
    "explicit-exception-handling": {
      "description": "Prefer specific exception types over catching all exceptions to avoid suppressing critical system signals",
      "applied_in": ["harmful-pattern-documentation"],
      "confidence": 0.85
    },
    "pattern-based-learning": {
      "description": "Document and track coding patterns systematically to improve codebase consistency",
      "applied_in": ["technical-planning"],
      "confidence": 0.75
    }
  },
  "metadata": {
    "total_patterns_analyzed": 1,
    "discovery_method": "bottom-up from file paths and descriptions",
    "discovered_at": "2025-10-17T22:48:02.042127"
  }
}
